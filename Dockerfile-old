# Variables that are required and need to be set manually:
#
# DOMAINS:
#   A string containing comma separated domains.
#   EX: domain.com,www.domain.com,sub.domain.com
#
#   If you want to generate different certificates for each domain, separate by semi-colon.
#   EX: domain.com,www.domain.com;sub.domain.com
#
# EMAIL:
#   e-mail to be used when generating the certificates. This is the e-mail that will be
#   notified when a certificate is about to expire.
#
# Paths that need to be mounted:
#
# /certs:
#   Where the certificates and other certbot generated files will be stored
#
# /nginx-conf-before:
#   Where the nginx conf files to be loaded before cert generation are.
#
# /nginx-conf-after:
#   Where the nginx conf files to be loaded after cert generation are.
#
# Paths suggested:
#
# /var/log/nginx:
#   This is where the logs are going to be stored, unless you specify a different path
#   in your server configuration block (which is recommended). You should mount it to
#   a directory in your host machine, so they don't get lost when the container stops
#   or is removed.
#
# /var/log/letsencrypt:
#   This is where certbot stores debug logs. If you want to read them later, you should
#   mount it to your host machine.

FROM nginx:latest

EXPOSE 80

RUN apt-get update -y && apt-get install curl -y
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update -y && apt-get install certbot nodejs yarn -y

RUN mkdir /cert-checks && chmod 755 /cert-checks

#COPY setup-and-run /opt/
#RUN chmod +x /opt/setup-and-run

ADD app /opt/app
WORKDIR /opt/app
RUN yarn install

CMD ["yarn", "run"]
