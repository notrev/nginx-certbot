#!/bin/bash -e

###############
# FUNCTIONS
###############

is_nginx_running() {
    #is_active=$(service nginx status | sed -n 's|\s*Active: \([a-z]*\).*$|\1|p')
    is_running=$(service nginx status | sed -n 's|nginx is running.|true|p')
    if [[ $is_running == true ]]; then
        echo true
    else
        echo false
    fi
}

generate_cert() {
    email=$1
    domains_list=$2

    command="certbot certonly --noninteractive --agree-tos --email=$email"

    IFS="," read -ra domains <<< "$domains_list"

    command="$command --webroot -w /cert-checks"
    for domain in ${domains[@]}; do
        # if there is a certs directory for the domain, do nothing
        if [[ -d /certs/live/$domain ]]; then
            return 0
        fi

        command="$command -d $domain"
    done

    echo "Running command: $command"
    #$($command)
}

###############
# MAIN
###############

# Validations
if [[ ! -d /certs ]]; then
    echo "ERROR: /certs path is not mounted."
    exit 1
fi

if [[ ! -d /nginx-conf-before ]]; then
    echo "ERROR: /nginx-conf-before path is not mounted."
    exit 1
fi

if [[ ! -d /nginx-conf-after ]]; then
    echo "ERROR: /nginx-conf-after path is not mounted."
    exit 1
fi

if [[ -z ${DOMAINS+x} ]]; then
    echo "ERROR: variable DOMAINS is not set."
    exit 1
fi

if [[ -z ${EMAIL+x} ]]; then
    echo "ERROR: variable EMAIL is not set."
    exit 1
fi

nginx -g "daemon on;"

echo ">>> Variables"
echo "DOMAINS: $DOMAINS"
echo "EMAIL: $EMAIL"
echo "<<<"

echo "Adding nginx conf before certificates generation"
pushd /etc/nginx/conf.d
    cp -f /nginx-conf-before/* .
popd

nginx -s reload

IFS=";" read -ra all_domains <<< "$DOMAINS"
for domains_group in ${all_domains[@]}; do
    generate_cert $EMAIL $domains_group
done

echo "Adding nginx conf after certificates generation"
pushd /etc/nginx/conf.d
    cp -f /nginx-conf-after/* .
popd

nginx -s reload

while [[ $(is_nginx_running) == false ]]; do
    echo "nginx not running... ($(is_nginx_running))"
    sleep 2s
done

# check if there are certs for the given domains
# if not
#   run certbot to generate certs
#   add nginx confs for ssl
#   stop and start nginx with 'nginx -g daemon off;'

# run certbot renew to add it to crontab

service nginx stop
#nginx -g "daemon off;"
